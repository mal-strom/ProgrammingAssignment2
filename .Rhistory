install.packages("devtools")
library(devtools)
find_rtools()
install.packages(kernSmooth)
install.packages("kernsmooth")
install.packages("KernSmooth")
library(kernsmooth)
library(KernSmooth)
install.packages("swirl")
library(swirl)
swirl()
5=7
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mySqrt <- z-1
mySqrt <- c(z-1)
mySqrt <- sqrt(z-1)
mySqrt
play()
z <- 10
z
mySqrt <- sqrt(z-1)
mySqrt
z <- c(1.1 9 3.14)
z <- c(1.1, 9, 3.14)
mySqrt
mySqrt2 <- sqrt(z-1)
mySqrt2
nxt()
myDiv <- z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
bye()
exit
swirl()
library(swirl)
ls()
rm(list=ls())
swirl()
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=myseq)
seq(along=my_seq
seq(along=my_seq)
seq_along(my_seq)
rep(0, times =40)
rep(c(0,1,2),times=10)
rep(c(0,1,2), each=10)
swirl()
numvect <-c(0.5,55,-10,6)
?c
num_vect <-c(0.5,55,-10,6)
tf <- num_vect<1
tf
num_vect>=6
my_char <- ("my", "name", "is")
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Marcia")
my_name <- c(my_char, "Marcia")
my_name
paste(my_name, collapse" ")
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(c(1,2,3),c("X","Y","Z"), sep="")
paste(1:3,c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep="-")
exit()
hw1_data <- read.csv("~/Data Science/R Programming/hw1_data.csv")
View(hw1_data)
library(datasets)
data(mtcars)
head(mtcars)
tapply(mtcars[,c(2,4), 2, mean])
tapply(mtcars[,c(2,4)], 2, mean)
?lapply
tapply
?tapply
head(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl==4, mean)
tapply(mtcars$hp, mtcars$cyl==8, mean)
tapply(mtcars$hp, mtcars$cyl==8, mean, simplify = TRUE)
avghp8 <- tapply(mtcars$hp, mtcars$cyl==8, mean)
avghp4 <- tapply(mtcars$hp, mtcars$cyl==4, mean)
abs(avghp8, avghp4)
?tapply
avghp4 <- tapply(mtcars$hp, mtcars$cyl==4, mtcars$cyl==8, mean)
tapply(mtcars$hp, mtcars$cyl==4, mtcars$cyl==8, mean)
tapply(mtcars$hp, mtcars$cyl[c(4,8)], mean)
dim(mtcars)
?abs
?function
?`function`
?matrix
?solve
?`$`
getwd()
setwd("~/Data_Science/R_Programming/Assignments/ProgrammingAssignment2")
ls()
source(cachematrix.R)
source("cachematrix.R")
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
source("cachematrix.R")
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix
amatrix$get()
amatrix$getinv()
cacheSolve(amatrix)
amatrix$getinv()
amatrix = makeCacheMatrix(matrix(11:14, nrow=2, ncol=2))
amatrix
amatrix$get()
cacheSolve(amatrix)
